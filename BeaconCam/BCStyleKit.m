//
//  BCStyleKit.m
//  BeaconCam
//
//  Created by Ryan Khalili on 5/20/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BCStyleKit.h"


@implementation BCStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawGenericButtonWithText: (NSString*)text highlighted: (BOOL)highlighted;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.636 green: 0.589 blue: 0.701 alpha: 1];
    CGFloat colorRGBA[4];
    [color getRed: &colorRGBA[0] green: &colorRGBA[1] blue: &colorRGBA[2] alpha: &colorRGBA[3]];

    UIColor* color2 = [UIColor colorWithRed: (colorRGBA[0] * 0.4 + 0.6) green: (colorRGBA[1] * 0.4 + 0.6) blue: (colorRGBA[2] * 0.4 + 0.6) alpha: (colorRGBA[3] * 0.4 + 0.6)];
    UIColor* color3 = [color colorWithAlphaComponent: 0.5];

    //// Rectangle Drawing
    CGRect rectangleRect = CGRectMake(3, 3, 180, 50);
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: rectangleRect cornerRadius: 10];
    [color2 setFill];
    [rectanglePath fill];
    [color setStroke];
    rectanglePath.lineWidth = 3.5;
    [rectanglePath stroke];
    NSMutableParagraphStyle* rectangleStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    rectangleStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* rectangleFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Avenir-Light" size: 16], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: rectangleStyle};

    [text drawInRect: CGRectOffset(rectangleRect, 0, (CGRectGetHeight(rectangleRect) - [text boundingRectWithSize: rectangleRect.size options: NSStringDrawingUsesLineFragmentOrigin attributes: rectangleFontAttributes context: nil].size.height) / 2) withAttributes: rectangleFontAttributes];


    if (highlighted)
    {
        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(3, 3, 180, 50) cornerRadius: 10];
        [color3 setFill];
        [rectangle2Path fill];
        [color3 setStroke];
        rectangle2Path.lineWidth = 3.5;
        [rectangle2Path stroke];
    }
}

+ (void)drawSettingsIconWithHighlighted: (BOOL)highlighted;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.636 green: 0.589 blue: 0.701 alpha: 1];
    CGFloat colorRGBA[4];
    [color getRed: &colorRGBA[0] green: &colorRGBA[1] blue: &colorRGBA[2] alpha: &colorRGBA[3]];

    UIColor* color2 = [UIColor colorWithRed: (colorRGBA[0] * 0.4 + 0.6) green: (colorRGBA[1] * 0.4 + 0.6) blue: (colorRGBA[2] * 0.4 + 0.6) alpha: (colorRGBA[3] * 0.4 + 0.6)];
    UIColor* color3 = [color colorWithAlphaComponent: 0.5];

    //// Gear
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(145.97, 64.55)];
        [bezierPath addLineToPoint: CGPointMake(140.02, 64.55)];
        [bezierPath addCurveToPoint: CGPointMake(131.11, 55.42) controlPoint1: CGPointMake(135.17, 64.55) controlPoint2: CGPointMake(131.11, 60.38)];
        [bezierPath addCurveToPoint: CGPointMake(134.04, 48.97) controlPoint1: CGPointMake(131.11, 52.92) controlPoint2: CGPointMake(132.16, 50.65)];
        [bezierPath addLineToPoint: CGPointMake(137.87, 45.22)];
        [bezierPath addCurveToPoint: CGPointMake(137.87, 31.59) controlPoint1: CGPointMake(141.66, 41.47) controlPoint2: CGPointMake(141.66, 35.34)];
        [bezierPath addLineToPoint: CGPointMake(129.15, 22.96)];
        [bezierPath addCurveToPoint: CGPointMake(122.31, 20.23) controlPoint1: CGPointMake(127.43, 21.25) controlPoint2: CGPointMake(124.89, 20.23)];
        [bezierPath addCurveToPoint: CGPointMake(115.47, 22.96) controlPoint1: CGPointMake(119.73, 20.23) controlPoint2: CGPointMake(117.23, 21.25)];
        [bezierPath addLineToPoint: CGPointMake(111.79, 26.63)];
        [bezierPath addCurveToPoint: CGPointMake(105.14, 29.64) controlPoint1: CGPointMake(110.03, 28.59) controlPoint2: CGPointMake(107.68, 29.64)];
        [bezierPath addCurveToPoint: CGPointMake(95.95, 20.78) controlPoint1: CGPointMake(100.14, 29.64) controlPoint2: CGPointMake(95.95, 25.58)];
        [bezierPath addLineToPoint: CGPointMake(95.95, 14.8)];
        [bezierPath addCurveToPoint: CGPointMake(86.37, 5) controlPoint1: CGPointMake(95.95, 9.53) controlPoint2: CGPointMake(91.69, 5)];
        [bezierPath addLineToPoint: CGPointMake(74.49, 5)];
        [bezierPath addCurveToPoint: CGPointMake(64.94, 14.8) controlPoint1: CGPointMake(69.17, 5) controlPoint2: CGPointMake(64.94, 9.49)];
        [bezierPath addLineToPoint: CGPointMake(64.94, 20.74)];
        [bezierPath addCurveToPoint: CGPointMake(55.76, 29.6) controlPoint1: CGPointMake(64.94, 25.54) controlPoint2: CGPointMake(60.76, 29.6)];
        [bezierPath addCurveToPoint: CGPointMake(49.26, 26.71) controlPoint1: CGPointMake(53.25, 29.6) controlPoint2: CGPointMake(50.95, 28.55)];
        [bezierPath addLineToPoint: CGPointMake(45.47, 22.96)];
        [bezierPath addCurveToPoint: CGPointMake(38.63, 20.23) controlPoint1: CGPointMake(43.75, 21.21) controlPoint2: CGPointMake(41.21, 20.23)];
        [bezierPath addCurveToPoint: CGPointMake(31.79, 22.96) controlPoint1: CGPointMake(36.05, 20.23) controlPoint2: CGPointMake(33.55, 21.25)];
        [bezierPath addLineToPoint: CGPointMake(22.99, 31.56)];
        [bezierPath addCurveToPoint: CGPointMake(22.99, 45.15) controlPoint1: CGPointMake(19.23, 35.3) controlPoint2: CGPointMake(19.23, 41.44)];
        [bezierPath addLineToPoint: CGPointMake(26.66, 48.82)];
        [bezierPath addCurveToPoint: CGPointMake(29.71, 55.42) controlPoint1: CGPointMake(28.62, 50.57) controlPoint2: CGPointMake(29.71, 52.92)];
        [bezierPath addCurveToPoint: CGPointMake(20.8, 64.55) controlPoint1: CGPointMake(29.71, 60.42) controlPoint2: CGPointMake(25.65, 64.55)];
        [bezierPath addLineToPoint: CGPointMake(14.85, 64.55)];
        [bezierPath addCurveToPoint: CGPointMake(5, 74.04) controlPoint1: CGPointMake(9.5, 64.55) controlPoint2: CGPointMake(5, 68.73)];
        [bezierPath addLineToPoint: CGPointMake(5, 79.98)];
        [bezierPath addLineToPoint: CGPointMake(5, 85.92)];
        [bezierPath addCurveToPoint: CGPointMake(14.85, 95.41) controlPoint1: CGPointMake(5, 91.19) controlPoint2: CGPointMake(9.5, 95.41)];
        [bezierPath addLineToPoint: CGPointMake(20.8, 95.41)];
        [bezierPath addCurveToPoint: CGPointMake(29.71, 104.54) controlPoint1: CGPointMake(25.65, 95.41) controlPoint2: CGPointMake(29.71, 99.58)];
        [bezierPath addCurveToPoint: CGPointMake(26.66, 111.14) controlPoint1: CGPointMake(29.71, 107.04) controlPoint2: CGPointMake(28.62, 109.39)];
        [bezierPath addLineToPoint: CGPointMake(22.99, 114.78)];
        [bezierPath addCurveToPoint: CGPointMake(22.99, 128.37) controlPoint1: CGPointMake(19.23, 118.53) controlPoint2: CGPointMake(19.23, 124.66)];
        [bezierPath addLineToPoint: CGPointMake(31.71, 137.04)];
        [bezierPath addCurveToPoint: CGPointMake(38.55, 139.77) controlPoint1: CGPointMake(33.43, 138.79) controlPoint2: CGPointMake(35.97, 139.77)];
        [bezierPath addCurveToPoint: CGPointMake(45.39, 137.04) controlPoint1: CGPointMake(41.13, 139.77) controlPoint2: CGPointMake(43.63, 138.75)];
        [bezierPath addLineToPoint: CGPointMake(49.19, 133.29)];
        [bezierPath addCurveToPoint: CGPointMake(55.68, 130.4) controlPoint1: CGPointMake(50.83, 131.45) controlPoint2: CGPointMake(53.17, 130.4)];
        [bezierPath addCurveToPoint: CGPointMake(64.87, 139.26) controlPoint1: CGPointMake(60.68, 130.4) controlPoint2: CGPointMake(64.87, 134.46)];
        [bezierPath addLineToPoint: CGPointMake(64.87, 145.2)];
        [bezierPath addCurveToPoint: CGPointMake(74.45, 155) controlPoint1: CGPointMake(64.87, 150.47) controlPoint2: CGPointMake(69.09, 155)];
        [bezierPath addLineToPoint: CGPointMake(86.33, 155)];
        [bezierPath addCurveToPoint: CGPointMake(95.88, 145.2) controlPoint1: CGPointMake(91.65, 155) controlPoint2: CGPointMake(95.88, 150.51)];
        [bezierPath addLineToPoint: CGPointMake(95.88, 139.26)];
        [bezierPath addCurveToPoint: CGPointMake(105.06, 130.4) controlPoint1: CGPointMake(95.88, 134.46) controlPoint2: CGPointMake(100.06, 130.4)];
        [bezierPath addCurveToPoint: CGPointMake(111.71, 133.4) controlPoint1: CGPointMake(107.57, 130.4) controlPoint2: CGPointMake(109.91, 131.49)];
        [bezierPath addLineToPoint: CGPointMake(115.39, 137.07)];
        [bezierPath addCurveToPoint: CGPointMake(122.23, 139.81) controlPoint1: CGPointMake(117.15, 138.79) controlPoint2: CGPointMake(119.65, 139.81)];
        [bezierPath addCurveToPoint: CGPointMake(129.07, 137.07) controlPoint1: CGPointMake(124.81, 139.81) controlPoint2: CGPointMake(127.31, 138.79)];
        [bezierPath addLineToPoint: CGPointMake(137.79, 128.41)];
        [bezierPath addCurveToPoint: CGPointMake(137.79, 114.78) controlPoint1: CGPointMake(141.55, 124.66) controlPoint2: CGPointMake(141.55, 118.53)];
        [bezierPath addLineToPoint: CGPointMake(133.96, 111.03)];
        [bezierPath addCurveToPoint: CGPointMake(131.03, 104.58) controlPoint1: CGPointMake(132.08, 109.35) controlPoint2: CGPointMake(131.03, 107.04)];
        [bezierPath addCurveToPoint: CGPointMake(139.94, 95.45) controlPoint1: CGPointMake(131.03, 99.58) controlPoint2: CGPointMake(135.1, 95.45)];
        [bezierPath addLineToPoint: CGPointMake(145.89, 95.45)];
        [bezierPath addCurveToPoint: CGPointMake(155, 85.96) controlPoint1: CGPointMake(151.21, 95.45) controlPoint2: CGPointMake(155, 91.27)];
        [bezierPath addLineToPoint: CGPointMake(155, 79.98)];
        [bezierPath addLineToPoint: CGPointMake(155, 74.04)];
        [bezierPath addCurveToPoint: CGPointMake(145.97, 64.55) controlPoint1: CGPointMake(155.08, 68.73) controlPoint2: CGPointMake(151.28, 64.55)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(111.67, 79.98)];
        [bezierPath addLineToPoint: CGPointMake(111.67, 79.98)];
        [bezierPath addCurveToPoint: CGPointMake(80.39, 111.22) controlPoint1: CGPointMake(111.67, 97.2) controlPoint2: CGPointMake(97.71, 111.22)];
        [bezierPath addCurveToPoint: CGPointMake(49.11, 79.98) controlPoint1: CGPointMake(63.07, 111.22) controlPoint2: CGPointMake(49.11, 97.2)];
        [bezierPath addLineToPoint: CGPointMake(49.11, 79.98)];
        [bezierPath addLineToPoint: CGPointMake(49.11, 79.98)];
        [bezierPath addCurveToPoint: CGPointMake(80.39, 48.74) controlPoint1: CGPointMake(49.11, 62.76) controlPoint2: CGPointMake(63.07, 48.74)];
        [bezierPath addCurveToPoint: CGPointMake(111.67, 79.98) controlPoint1: CGPointMake(97.71, 48.74) controlPoint2: CGPointMake(111.67, 62.76)];
        [bezierPath addLineToPoint: CGPointMake(111.67, 79.98)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [color2 setFill];
        [bezierPath fill];
        [color setStroke];
        bezierPath.lineWidth = 4.5;
        [bezierPath stroke];
    }


    if (highlighted)
    {
        //// Gear Selected
        {
            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(145.97, 64.55)];
            [bezier2Path addLineToPoint: CGPointMake(140.02, 64.55)];
            [bezier2Path addCurveToPoint: CGPointMake(131.11, 55.42) controlPoint1: CGPointMake(135.17, 64.55) controlPoint2: CGPointMake(131.11, 60.38)];
            [bezier2Path addCurveToPoint: CGPointMake(134.04, 48.97) controlPoint1: CGPointMake(131.11, 52.92) controlPoint2: CGPointMake(132.16, 50.65)];
            [bezier2Path addLineToPoint: CGPointMake(137.87, 45.22)];
            [bezier2Path addCurveToPoint: CGPointMake(137.87, 31.59) controlPoint1: CGPointMake(141.66, 41.47) controlPoint2: CGPointMake(141.66, 35.34)];
            [bezier2Path addLineToPoint: CGPointMake(129.15, 22.96)];
            [bezier2Path addCurveToPoint: CGPointMake(122.31, 20.23) controlPoint1: CGPointMake(127.43, 21.25) controlPoint2: CGPointMake(124.89, 20.23)];
            [bezier2Path addCurveToPoint: CGPointMake(115.47, 22.96) controlPoint1: CGPointMake(119.73, 20.23) controlPoint2: CGPointMake(117.23, 21.25)];
            [bezier2Path addLineToPoint: CGPointMake(111.79, 26.63)];
            [bezier2Path addCurveToPoint: CGPointMake(105.14, 29.64) controlPoint1: CGPointMake(110.03, 28.59) controlPoint2: CGPointMake(107.68, 29.64)];
            [bezier2Path addCurveToPoint: CGPointMake(95.95, 20.78) controlPoint1: CGPointMake(100.14, 29.64) controlPoint2: CGPointMake(95.95, 25.58)];
            [bezier2Path addLineToPoint: CGPointMake(95.95, 14.8)];
            [bezier2Path addCurveToPoint: CGPointMake(86.37, 5) controlPoint1: CGPointMake(95.95, 9.53) controlPoint2: CGPointMake(91.69, 5)];
            [bezier2Path addLineToPoint: CGPointMake(74.49, 5)];
            [bezier2Path addCurveToPoint: CGPointMake(64.94, 14.8) controlPoint1: CGPointMake(69.17, 5) controlPoint2: CGPointMake(64.94, 9.49)];
            [bezier2Path addLineToPoint: CGPointMake(64.94, 20.74)];
            [bezier2Path addCurveToPoint: CGPointMake(55.76, 29.6) controlPoint1: CGPointMake(64.94, 25.54) controlPoint2: CGPointMake(60.76, 29.6)];
            [bezier2Path addCurveToPoint: CGPointMake(49.26, 26.71) controlPoint1: CGPointMake(53.25, 29.6) controlPoint2: CGPointMake(50.95, 28.55)];
            [bezier2Path addLineToPoint: CGPointMake(45.47, 22.96)];
            [bezier2Path addCurveToPoint: CGPointMake(38.63, 20.23) controlPoint1: CGPointMake(43.75, 21.21) controlPoint2: CGPointMake(41.21, 20.23)];
            [bezier2Path addCurveToPoint: CGPointMake(31.79, 22.96) controlPoint1: CGPointMake(36.05, 20.23) controlPoint2: CGPointMake(33.55, 21.25)];
            [bezier2Path addLineToPoint: CGPointMake(22.99, 31.56)];
            [bezier2Path addCurveToPoint: CGPointMake(22.99, 45.15) controlPoint1: CGPointMake(19.23, 35.3) controlPoint2: CGPointMake(19.23, 41.44)];
            [bezier2Path addLineToPoint: CGPointMake(26.66, 48.82)];
            [bezier2Path addCurveToPoint: CGPointMake(29.71, 55.42) controlPoint1: CGPointMake(28.62, 50.57) controlPoint2: CGPointMake(29.71, 52.92)];
            [bezier2Path addCurveToPoint: CGPointMake(20.8, 64.55) controlPoint1: CGPointMake(29.71, 60.42) controlPoint2: CGPointMake(25.65, 64.55)];
            [bezier2Path addLineToPoint: CGPointMake(14.85, 64.55)];
            [bezier2Path addCurveToPoint: CGPointMake(5, 74.04) controlPoint1: CGPointMake(9.5, 64.55) controlPoint2: CGPointMake(5, 68.73)];
            [bezier2Path addLineToPoint: CGPointMake(5, 79.98)];
            [bezier2Path addLineToPoint: CGPointMake(5, 85.92)];
            [bezier2Path addCurveToPoint: CGPointMake(14.85, 95.41) controlPoint1: CGPointMake(5, 91.19) controlPoint2: CGPointMake(9.5, 95.41)];
            [bezier2Path addLineToPoint: CGPointMake(20.8, 95.41)];
            [bezier2Path addCurveToPoint: CGPointMake(29.71, 104.54) controlPoint1: CGPointMake(25.65, 95.41) controlPoint2: CGPointMake(29.71, 99.58)];
            [bezier2Path addCurveToPoint: CGPointMake(26.66, 111.14) controlPoint1: CGPointMake(29.71, 107.04) controlPoint2: CGPointMake(28.62, 109.39)];
            [bezier2Path addLineToPoint: CGPointMake(22.99, 114.78)];
            [bezier2Path addCurveToPoint: CGPointMake(22.99, 128.37) controlPoint1: CGPointMake(19.23, 118.53) controlPoint2: CGPointMake(19.23, 124.66)];
            [bezier2Path addLineToPoint: CGPointMake(31.71, 137.04)];
            [bezier2Path addCurveToPoint: CGPointMake(38.55, 139.77) controlPoint1: CGPointMake(33.43, 138.79) controlPoint2: CGPointMake(35.97, 139.77)];
            [bezier2Path addCurveToPoint: CGPointMake(45.39, 137.04) controlPoint1: CGPointMake(41.13, 139.77) controlPoint2: CGPointMake(43.63, 138.75)];
            [bezier2Path addLineToPoint: CGPointMake(49.19, 133.29)];
            [bezier2Path addCurveToPoint: CGPointMake(55.68, 130.4) controlPoint1: CGPointMake(50.83, 131.45) controlPoint2: CGPointMake(53.17, 130.4)];
            [bezier2Path addCurveToPoint: CGPointMake(64.87, 139.26) controlPoint1: CGPointMake(60.68, 130.4) controlPoint2: CGPointMake(64.87, 134.46)];
            [bezier2Path addLineToPoint: CGPointMake(64.87, 145.2)];
            [bezier2Path addCurveToPoint: CGPointMake(74.45, 155) controlPoint1: CGPointMake(64.87, 150.47) controlPoint2: CGPointMake(69.09, 155)];
            [bezier2Path addLineToPoint: CGPointMake(86.33, 155)];
            [bezier2Path addCurveToPoint: CGPointMake(95.88, 145.2) controlPoint1: CGPointMake(91.65, 155) controlPoint2: CGPointMake(95.88, 150.51)];
            [bezier2Path addLineToPoint: CGPointMake(95.88, 139.26)];
            [bezier2Path addCurveToPoint: CGPointMake(105.06, 130.4) controlPoint1: CGPointMake(95.88, 134.46) controlPoint2: CGPointMake(100.06, 130.4)];
            [bezier2Path addCurveToPoint: CGPointMake(111.71, 133.4) controlPoint1: CGPointMake(107.57, 130.4) controlPoint2: CGPointMake(109.91, 131.49)];
            [bezier2Path addLineToPoint: CGPointMake(115.39, 137.07)];
            [bezier2Path addCurveToPoint: CGPointMake(122.23, 139.81) controlPoint1: CGPointMake(117.15, 138.79) controlPoint2: CGPointMake(119.65, 139.81)];
            [bezier2Path addCurveToPoint: CGPointMake(129.07, 137.07) controlPoint1: CGPointMake(124.81, 139.81) controlPoint2: CGPointMake(127.31, 138.79)];
            [bezier2Path addLineToPoint: CGPointMake(137.79, 128.41)];
            [bezier2Path addCurveToPoint: CGPointMake(137.79, 114.78) controlPoint1: CGPointMake(141.55, 124.66) controlPoint2: CGPointMake(141.55, 118.53)];
            [bezier2Path addLineToPoint: CGPointMake(133.96, 111.03)];
            [bezier2Path addCurveToPoint: CGPointMake(131.03, 104.58) controlPoint1: CGPointMake(132.08, 109.35) controlPoint2: CGPointMake(131.03, 107.04)];
            [bezier2Path addCurveToPoint: CGPointMake(139.94, 95.45) controlPoint1: CGPointMake(131.03, 99.58) controlPoint2: CGPointMake(135.1, 95.45)];
            [bezier2Path addLineToPoint: CGPointMake(145.89, 95.45)];
            [bezier2Path addCurveToPoint: CGPointMake(155, 85.96) controlPoint1: CGPointMake(151.21, 95.45) controlPoint2: CGPointMake(155, 91.27)];
            [bezier2Path addLineToPoint: CGPointMake(155, 79.98)];
            [bezier2Path addLineToPoint: CGPointMake(155, 74.04)];
            [bezier2Path addCurveToPoint: CGPointMake(145.97, 64.55) controlPoint1: CGPointMake(155.08, 68.73) controlPoint2: CGPointMake(151.28, 64.55)];
            [bezier2Path closePath];
            [bezier2Path moveToPoint: CGPointMake(111.67, 79.98)];
            [bezier2Path addLineToPoint: CGPointMake(111.67, 79.98)];
            [bezier2Path addCurveToPoint: CGPointMake(80.39, 111.22) controlPoint1: CGPointMake(111.67, 97.2) controlPoint2: CGPointMake(97.71, 111.22)];
            [bezier2Path addCurveToPoint: CGPointMake(49.11, 79.98) controlPoint1: CGPointMake(63.07, 111.22) controlPoint2: CGPointMake(49.11, 97.2)];
            [bezier2Path addLineToPoint: CGPointMake(49.11, 79.98)];
            [bezier2Path addLineToPoint: CGPointMake(49.11, 79.98)];
            [bezier2Path addCurveToPoint: CGPointMake(80.39, 48.74) controlPoint1: CGPointMake(49.11, 62.76) controlPoint2: CGPointMake(63.07, 48.74)];
            [bezier2Path addCurveToPoint: CGPointMake(111.67, 79.98) controlPoint1: CGPointMake(97.71, 48.74) controlPoint2: CGPointMake(111.67, 62.76)];
            [bezier2Path addLineToPoint: CGPointMake(111.67, 79.98)];
            [bezier2Path closePath];
            bezier2Path.miterLimit = 4;

            [color3 setFill];
            [bezier2Path fill];
            [color setStroke];
            bezier2Path.lineWidth = 4.5;
            [bezier2Path stroke];
        }
    }
}

+ (void)drawExitButtonWithHighlighted: (BOOL)highlighted;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.636 green: 0.589 blue: 0.701 alpha: 1];
    CGFloat colorRGBA[4];
    [color getRed: &colorRGBA[0] green: &colorRGBA[1] blue: &colorRGBA[2] alpha: &colorRGBA[3]];

    UIColor* color2 = [UIColor colorWithRed: (colorRGBA[0] * 0.4 + 0.6) green: (colorRGBA[1] * 0.4 + 0.6) blue: (colorRGBA[2] * 0.4 + 0.6) alpha: (colorRGBA[3] * 0.4 + 0.6)];
    UIColor* color3 = [color colorWithAlphaComponent: 0.5];

    //// Rectangle Drawing
    CGRect rectangleRect = CGRectMake(3, 3, 80, 40);
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: rectangleRect cornerRadius: 10];
    [color2 setFill];
    [rectanglePath fill];
    [color setStroke];
    rectanglePath.lineWidth = 3.5;
    [rectanglePath stroke];
    {
        NSString* textContent = @"Exit";
        NSMutableParagraphStyle* rectangleStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        rectangleStyle.alignment = NSTextAlignmentCenter;

        NSDictionary* rectangleFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Avenir-Light" size: 16], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: rectangleStyle};

        [textContent drawInRect: CGRectOffset(rectangleRect, 0, (CGRectGetHeight(rectangleRect) - [textContent boundingRectWithSize: rectangleRect.size options: NSStringDrawingUsesLineFragmentOrigin attributes: rectangleFontAttributes context: nil].size.height) / 2) withAttributes: rectangleFontAttributes];
    }


    if (highlighted)
    {
        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(3, 3, 80, 40) cornerRadius: 10];
        [color3 setFill];
        [rectangle2Path fill];
        [color3 setStroke];
        rectangle2Path.lineWidth = 3.5;
        [rectangle2Path stroke];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfGenericButtonWithText: (NSString*)text highlighted: (BOOL)highlighted;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(186, 56), NO, 0.0f);
    [BCStyleKit drawGenericButtonWithText: text highlighted: highlighted];
    UIImage* imageOfGenericButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfGenericButton;
}

+ (UIImage*)imageOfSettingsIconWithHighlighted: (BOOL)highlighted;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(160, 160), NO, 0.0f);
    [BCStyleKit drawSettingsIconWithHighlighted: highlighted];
    UIImage* imageOfSettingsIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfSettingsIcon;
}

+ (UIImage*)imageOfExitButtonWithHighlighted: (BOOL)highlighted;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(86, 46), NO, 0.0f);
    [BCStyleKit drawExitButtonWithHighlighted: highlighted];
    UIImage* imageOfExitButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfExitButton;
}

@end
